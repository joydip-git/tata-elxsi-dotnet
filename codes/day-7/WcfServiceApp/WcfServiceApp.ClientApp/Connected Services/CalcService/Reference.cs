//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceApp.ClientApp.CalcService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalcService.ICalculation")]
    public interface ICalculation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculation/AddNumbers", ReplyAction="http://tempuri.org/ICalculation/AddNumbersResponse")]
        int AddNumbers(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculation/AddNumbers", ReplyAction="http://tempuri.org/ICalculation/AddNumbersResponse")]
        System.Threading.Tasks.Task<int> AddNumbersAsync(int a, int b);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculationChannel : WcfServiceApp.ClientApp.CalcService.ICalculation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculationClient : System.ServiceModel.ClientBase<WcfServiceApp.ClientApp.CalcService.ICalculation>, WcfServiceApp.ClientApp.CalcService.ICalculation {
        
        public CalculationClient() {
        }
        
        public CalculationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddNumbers(int a, int b) {
            return base.Channel.AddNumbers(a, b);
        }
        
        public System.Threading.Tasks.Task<int> AddNumbersAsync(int a, int b) {
            return base.Channel.AddNumbersAsync(a, b);
        }
    }
}
