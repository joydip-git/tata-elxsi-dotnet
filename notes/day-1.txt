Languages:
	VC#.NET:
		- OOP lnaguage
		- type-safe language
	VB.NET
	VC++.NET
	....

.NET Platform:

	.NET Framework: (2001 - 4.8) - legacy framework
		- mainly targetted for windows machines
		- development environment
	
		a. library (FCL/BCL - Framework/Base class library)
		b. runtime (CLR - Common Language Runtime)
		c. data access technique - ADO.NET (ActiveX Data Object)
		d. web technology (ASP.NET - Active Server Pages)
		e. EF

	.NET Products
		- Editors - VS, VS Code
		- servers - SQL Server
			  - 

	.NET Services
		- windows services
		- web services

.NET framework application execution
	a. source code --> C#/VB compiler (csc/vbc) --> output code (.exe)[assembly]
	assembly contains CIL/MSIL/IL code 

	b. run the exe file (CLR) - IL Code --> JIT (CLR) --> machine level code

applications:
	stand-alone (executable) and library (dll)
	a. standalone apps will contain Main method
	b. libraries will not have Main method

tools:
	ildasm tool: 
	C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.7.1 Tools
	Other .NET DLLs: c:\windows\Microsoft.NET\

ILDASM: Intermediate Language Disassembler - to view the assembly 
	

.NET Core framework: (2016 - 1.0, 1.1, 2.0, 2.1, 2.2, 3.0, 3.1, 5.0, 6.0)
	- cross platform

.NET 6.0/5.0/3.1 
	- core library
	- runtime
		- core runtime
		- asp.net core runtime
		- deskptop runtime
	- compilers (roslyn)
	- EF core for ADO.NET
	- asp.net core application (and asp.net core runtime)
	- deskptop application
	- CLI tool (dotnet)

nuget + github

.NET standard (guideline) - NOT a framework


Library apps:
	- reusable component
		 - contains logic (business/data access logic)
		 - produce result/output and return the same to the consumer
	- when compiled produces .DLL extension output file (Assembly)
	- no Main method
	- can be used from any other app by adding reference to this application/assembly

creating app using dotnet cli tool:
dotnet new console --name firstCLIapp

compiling the app using cli tool: (when in the project directory)
>dotnet build

adding reference to an existing project using CLI tool:(when in the project directory)
>dotnet add firstCLIapp.csproj reference "E:\tata-elxsi-dotnet\codes\day-1\MessngerApps\MessngerLibrary\MessngerLibrary.csproj"
Reference `..\MessngerApps\MessngerLibrary\MessngerLibrary.csproj` added to the project.

run the app using cli tool:(when in the project directory)
>dotnet run

create new solution file: (first create a blank directory and then move inside of that)
>dotnet new sln

add reference to a project from the solution file:
>dotnet sln add "E:\tata-elxsi-dotnet\codes\day-1\sol-demo\sample"


Year			version
--------------------------------------------
2001			1.0
2003			1.1
2005			2.0
2007			3.0
2008			3.5
2010			4.0
2012			5.0
2013			5.0
2015			6.0
2017			7.0 (targetted for .NET core 2.0)
2019			8.0 (targetted for .NET core 3.0)
2021			9.0 (targetted for .NET 5.0)
2021			10.0 (targetted for .NET 6.0)

SOLID:
S: single responsibility

Pass by value
Pass by refernce
Pass by out


	